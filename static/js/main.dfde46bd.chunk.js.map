{"version":3,"sources":["firebase.js","Todo.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","todo","props","List","className","ListItem","ListItemText","primary","text","secondary","color","onClick","event","collection","doc","id","delete","App","useState","todos","setTodos","input","setInput","useEffect","orderBy","onSnapshot","snapshot","docs","map","data","FormControl","InputLabel","Input","value","onChange","target","Button","disabled","type","preventDefault","add","timestamp","FieldValue","serverTimestamp","variant","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRA6BeA,EAhBKC,IAASC,cAAc,CAInCC,OAAQ,0CACRC,WAAY,iCACZC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,gBACnBC,MAAO,6CACPC,cAAe,iBAIAC,Y,yBCJRC,MAjBf,SAAcC,GACV,OACI,eAACC,EAAA,EAAD,CAAMC,UAAU,YAAhB,UAGI,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAcC,QAASL,EAAMM,KAAKP,KAAMQ,UAAWP,EAAMM,KAAKP,SAElE,cAAC,IAAD,CAAYS,MAAM,YAAYC,QAAS,SAAAC,GAAK,OAAItB,EAAGuB,WAAW,SAASC,IAAIZ,EAAMM,KAAKO,IAAIC,gB,kCCwCvFC,MA/Cf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAoBA,OAhBAC,qBAAU,WAERjC,EAAGuB,WAAW,SAASW,QAAQ,YAAa,QAAQC,YAAW,SAAAC,GAC7DN,EAASM,EAASC,KAAKC,KAAI,SAAAd,GAAG,MAAK,CAAEC,GAAID,EAAIC,GAAId,KAAMa,EAAIe,OAAO5B,eAEnE,IAYD,sBAAKG,UAAU,MAAf,UACE,2CACA,iCAEE,eAAC0B,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,yBACA,cAACC,EAAA,EAAD,CAAOC,MAAOZ,EAAOa,SAAU,SAAAtB,GAAK,OAAIU,EAASV,EAAMuB,OAAOF,aAGhE,cAACG,EAAA,EAAD,CAAQC,UAAWhB,EAAOiB,KAAK,SAAS3B,QAnB9B,SAACC,GACfA,EAAM2B,iBACNjD,EAAGuB,WAAW,SAAS2B,IAAI,CACzBvC,KAAMoB,EACNoB,UAAWlD,IAASS,UAAU0C,WAAWC,oBAE3CvB,EAAS,GAAD,mBAAKD,GAAL,CAAYE,KACpBC,EAAS,KAYqDsB,QAAQ,YAAYlC,MAAM,UAApF,yBAIF,6BACGS,EAAMS,KAAI,SAAA3B,GAAI,OAEb,aADA,CACC,EAAD,CAAMO,KAAMP,aClCP4C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.dfde46bd.chunk.js","sourcesContent":["// For Firebase JS SDK v7.20.0 and later, measurementId is optional\n// const firebaseConfig = {\n//     apiKey: \"AIzaSyCwzn09XIyrpZMSRxW7GMNPwiYTvrnKvRw\",\n//     authDomain: \"todo-app-fcedb.firebaseapp.com\",\n//     projectId: \"todo-app-fcedb\",\n//     storageBucket: \"todo-app-fcedb.appspot.com\",\n//     messagingSenderId: \"1080332269697\",\n//     appId: \"1:1080332269697:web:caeaf1b47e50ba8b877580\",\n//     measurementId: \"G-9D3H66Z1TG\"\n//   };\n\nimport firebase from \"firebase\"\n\nconst firebaseApp = firebase.initializeApp({\n\n        // For Firebase JS SDK v7.20.0 and later, measurementId is optional\n\n        apiKey: \"AIzaSyCwzn09XIyrpZMSRxW7GMNPwiYTvrnKvRw\",\n        authDomain: \"todo-app-fcedb.firebaseapp.com\",\n        projectId: \"todo-app-fcedb\",\n        storageBucket: \"todo-app-fcedb.appspot.com\",\n        messagingSenderId: \"1080332269697\",\n        appId: \"1:1080332269697:web:caeaf1b47e50ba8b877580\",\n        measurementId: \"G-9D3H66Z1TG\"\n\n\n});\nconst db = firebaseApp.firestore();\n\nexport default db;","import React from 'react'\nimport './Todo.css'\nimport { List, ListItem, ListItemText, ListItemAvatar, Button } from '@material-ui/core'\nimport db from './firebase';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nfunction todo(props) {\n    return (\n        <List className=\"todo_list\">\n            {/* <ListItemAvatar>\n            </ListItemAvatar> */}\n            <ListItem>\n                <ListItemText primary={props.text.todo} secondary={props.text.todo} />\n            </ListItem>\n            <DeleteIcon color=\"secondary\" onClick={event => db.collection('todos').doc(props.text.id).delete()} />\n\n        </List>\n        // <di v>\n        //     <li>{props.text}</li>\n        // </div>\n    )\n}\n\nexport default todo;\n","import './App.css';\nimport Todo from './Todo'\nimport React, { useState, useEffect } from 'react'\nimport { Button, FormControl, FormHelperText, Input, InputLabel } from '@material-ui/core';\nimport db from './firebase';\nimport firebase from 'firebase';\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [input, setInput] = useState('');\n\n  //when the app loads, we need to listen to database and fetch new todos as they added or removed\n\n  useEffect(() => {\n    //when app.js loads\n    db.collection('todos').orderBy('timestamp', 'desc').onSnapshot(snapshot => {\n      setTodos(snapshot.docs.map(doc => ({ id: doc.id, todo: doc.data().todo })))\n    })\n  }, [])\n\n  const addTodo = (event) => {\n    event.preventDefault(); // stop refresh\n    db.collection('todos').add({\n      todo: input,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    })\n    setTodos([...todos, input]);\n    setInput(''); //clear up the input after clicking to button\n  }\n  return (\n    <div className=\"App\">\n      <h1>Todo App </h1>\n      <form>\n        {/* <input  /> */}\n        <FormControl>\n          <InputLabel>Enter TODO</InputLabel>\n          <Input value={input} onChange={event => setInput(event.target.value)} />\n          {/* <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText> */}\n        </FormControl>\n        <Button disabled={!input} type=\"submit\" onClick={addTodo} variant=\"contained\" color=\"primary\">Add List</Button>\n      </form>\n\n\n      <ul>\n        {todos.map(todo => (\n          // <li>{todo}</li>\n          <Todo text={todo} />\n        )\n        )}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
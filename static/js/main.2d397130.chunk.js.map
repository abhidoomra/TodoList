{"version":3,"sources":["firebase.js","Todo.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","left","textAlign","close","top","right","cursor","center","display","flexDirection","justifyContent","alignItems","Todo","props","classes","useState","open","setOpen","input","setInput","handleClose","Modal","onClose","className","text","todo","Input","placeholder","value","onChange","event","target","Button","variant","color","size","disabled","onClick","collection","doc","id","set","merge","fontSize","List","ListItem","ListItemText","primary","secondary","e","delete","styleTodo","App","todos","setTodos","useEffect","orderBy","onSnapshot","snapshot","docs","map","data","FormControl","InputLabel","type","preventDefault","add","timestamp","FieldValue","serverTimestamp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d397130.chunk.js","sourcesContent":["// For Firebase JS SDK v7.20.0 and later, measurementId is optional\n// const firebaseConfig = {\n//     apiKey: \"AIzaSyCwzn09XIyrpZMSRxW7GMNPwiYTvrnKvRw\",\n//     authDomain: \"todo-app-fcedb.firebaseapp.com\",\n//     projectId: \"todo-app-fcedb\",\n//     storageBucket: \"todo-app-fcedb.appspot.com\",\n//     messagingSenderId: \"1080332269697\",\n//     appId: \"1:1080332269697:web:caeaf1b47e50ba8b877580\",\n//     measurementId: \"G-9D3H66Z1TG\"\n//   };\n\nimport firebase from \"firebase\"\n\nconst firebaseApp = firebase.initializeApp({\n\n        // For Firebase JS SDK v7.20.0 and later, measurementId is optional\n\n        apiKey: \"AIzaSyCwzn09XIyrpZMSRxW7GMNPwiYTvrnKvRw\",\n        authDomain: \"todo-app-fcedb.firebaseapp.com\",\n        projectId: \"todo-app-fcedb\",\n        storageBucket: \"todo-app-fcedb.appspot.com\",\n        messagingSenderId: \"1080332269697\",\n        appId: \"1:1080332269697:web:caeaf1b47e50ba8b877580\",\n        measurementId: \"G-9D3H66Z1TG\"\n\n\n});\nconst db = firebaseApp.firestore();\n\nexport default db;","import React, { useState } from 'react'\nimport './Todo.css'\nimport { List, ListItem, ListItemText, ListItemAvatar, Button, Modal, Input } from '@material-ui/core'\nimport db from './firebase';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst useStyles = makeStyles((theme) => ({\n    // get from material ui modal search in google for stling modal\n    paper: {\n        position: 'absolute',\n        width: '50%',\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n        left: '25vw',\n        textAlign: 'center'\n    },\n    close: {\n        position: 'absolute',\n        top: '0',\n        right: '0',\n        cursor: \"pointer\"\n    },\n    center: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n    },\n    // stodo: {\n    //     border: '2px solid blue',\n    //     margin: '10px'\n    // }\n}));\n\n\nfunction Todo(props) {\n    const classes = useStyles();\n    const [open, setOpen] = useState(false);\n    const [input, setInput] = useState('');\n    // const handleOpen = () => {\n    //     setOpen(true);\n    // };\n    const handleClose = () => {\n        setInput(\"\");\n        setOpen(false);\n    };\n\n    const updateTodo = () => {\n        db.collection('todos').doc(props.text.id).set({\n            todo: input\n        }, { merge: true })\n        // prevent overriding\n        setInput('');\n        setOpen(false);\n    }\n\n\n    return (\n        <>\n            <Modal open={open} onClose={handleClose}>\n                <div className={classes.paper}>\n                    <h1>EDIT TASK</h1>\n                    <p>Recent Todo: <b>{props.text.todo}</b></p>\n                    <Input placeholder={props.text.todo} value={input} onChange={event => setInput(event.target.value)} />\n                    <Button variant=\"contained\" color=\"primary\" size=\"small\" disabled={!input} onClick={updateTodo}>Update Todo</Button>\n                    <CloseIcon className={classes.close} color=\"secondary\" fontSize=\"large\" onClick={handleClose} />\n                </div>\n            </Modal>\n            <List className=\"todo_list\" >\n                {/* className={classes.stodo} > */}\n                {/* <ListItemAvatar>\n            </ListItemAvatar> */}\n                <ListItem >\n                    <ListItemText primary={props.text.todo} secondary={props.text.todo} />\n                </ListItem>\n                <div className={classes.center}>\n                    <Button color=\"primary\" variant=\"contained\" onClick={e => setOpen(true)}>EDIT</Button>\n                    <DeleteIcon cursor=\"pointer\" color=\"secondary\" onClick={event => db.collection('todos').doc(props.text.id).delete()} />\n                </div>\n            </List>\n        </>\n    )\n};\n\nexport default Todo;\n","import './App.css';\nimport Todo from './Todo'\nimport React, { useState, useEffect } from 'react'\nimport { Button, FormControl, FormHelperText, Input, InputLabel, makeStyles } from '@material-ui/core';\nimport db from './firebase';\nimport firebase from 'firebase';\n\nconst useStyles = makeStyles((theme) => ({\n  center: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  styleTodo: {\n    border: '2px solid blue',\n  }\n}));\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [input, setInput] = useState('');\n  const classes = useStyles();\n  //when the app loads, we need to listen to database and fetch new todos as they added or removed\n\n  useEffect(() => {\n    //when app.js loads\n    db.collection('todos').orderBy('timestamp', 'desc').onSnapshot(snapshot => {\n      setTodos(snapshot.docs.map(doc => ({ id: doc.id, todo: doc.data().todo })))\n    })\n  }, [])\n\n  const addTodo = (event) => {\n    event.preventDefault(); // stop refresh\n    db.collection('todos').add({\n      todo: input,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    })\n    setTodos([...todos, input]);\n    setInput(''); //clear up the input after clicking to button\n  }\n  return (\n    <div className=\"App\">\n      <h1>Todo App </h1>\n      <form className={classes.center}>\n        {/* <input  /> */}\n        <FormControl >\n          <InputLabel>Enter TODO</InputLabel>\n          <Input value={input} onChange={event => setInput(event.target.value)} />\n          {/* <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText> */}\n        </FormControl>\n        <Button disabled={!input} type=\"submit\" onClick={addTodo} variant=\"contained\" color=\"primary\">Add List</Button>\n      </form>\n\n\n      <ul>\n        {todos.map(todo => (\n          // <li>{todo}</li>\n          <Todo text={todo} />\n        )\n        )}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}